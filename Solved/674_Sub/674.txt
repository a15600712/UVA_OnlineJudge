1.初始化:

程式碼首先定義了一個包含硬幣面值的向量cent，其中cent = {1, 5, 10, 25, 50}，代表可用的硬幣面值。
定義了一個名為table的二維數組，大小為cent.size()行和7500列，用於存儲到達各個金額的組合數量。7500是這個問題設定的最大金額限制。

2. 動態規劃過程(dp函數):

初始化: 對於所有硬幣面值i，table[i][0]被初始化為1，表示金額為0的組合方式只有一種，即不選擇任何硬幣。
對於第一行i=0（即面值為1的硬幣），對於所有j（j為目標金額），如果j能被cent[i]整除，則table[i][j]=1，表示用面值為1的硬幣組成金額j只有一種方式。
對於其他行i!=0，即其他面值的硬幣，和所有列j，程序進行以下檢查：
如果目標金額j小於當前硬幣面值cent[i]（即j-cent[i]<0），則table[i][j]的值等於上一行同列的值table[i-1][j]，表示不使用當前面值的硬幣時的組合數量。
如果目標金額j大於或等於當前硬幣面值cent[i]（即j-cent[i]>=0），則table[i][j]的值等於上一行同列的值table[i-1][j]加上當前行、
當前金額減去當前硬幣面值的列的值table[i][j-cent[i]]。這代表的是不使用當前面值的硬幣的組合數量加上至少使用一個當前面值硬幣的組合數量。
